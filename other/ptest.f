c-----------------------------------------------------------------------      program ptest      implicit none      integer indnvp, mshare, nvp, nblok, ndvr, nvrp      parameter( indnvp =   0, mshare =   0)      parameter(nvp=2**indnvp,nblok=1+mshare*(nvp-1))      parameter(ndvr=256,nvrp=(ndvr-1)/nvp+1)      integer kstrt, nd      double precision vran      dimension vran(nvrp,nblok)      kstrt = 1      call prandom(vran,kstrt,nvp,nvrp,nd,nvrp,nblok)      end programc-----------------------------------------------------------------------      subroutine prandom(vran,kstrt,nvp,nvrp,ndp,nvrd,nblok)c this program calculates nvrp random numbers for nvp processors from a c uniform distribution, producing numbers in the interval (0,1)c written for the ibm by viktor k. decyk, uclac parallel versionc each random number is generated from a separate seed, which is justc the normal seed calculated every 100 million numbers apart.c thus if more than 100,000,000 arrays of numbers are requested, thec different numbers will no longer be unique.c each processor uses no more than (ndv-1)/nvp+1 seeds.c if nvp > ndv, adjacent mdp processors will share the same seed, andc return the same random numbers, where mdp = nvp/min0(nvp,ndv)c vran = output array of random numbersc kstrt = starting data block numberc nvp = number of real or virtual processorsc nvrp = number of random numbers requested per processor, <= ndv/nvpc ndp = number of random numbers returned = min((ndv-1)/nvp+1,nvrp)c nvrd = first dimension of vran arrayc nblok = number of data blocksc ndv = total maximum number of random seeds, currently 256      parameter(ndvb=64,ndv=4*ndvb)      integer r1,r2      integer r1a,r1b,r1c,r1d,r2a,r2b,r2c,r2d      double precision vran,h1l,h1u,r0,r3,asc,bsc      dimension vran(nvrd,nblok)      dimension r1(ndv), r2(ndv)      dimension r1a(ndvb), r1b(ndvb), r1c(ndvb), r1d(ndvb)      dimension r2a(ndvb), r2b(ndvb), r2c(ndvb), r2d(ndvb)      equivalence (r1a(1),r1(1)), (r1b(1),r1(ndvb+1))      equivalence (r1c(1),r1(2*ndvb+1)), (r1d(1),r1(3*ndvb+1))      equivalence (r2a(1),r2(1)), (r2b(1),r2(ndvb+1))      equivalence (r2c(1),r2(2*ndvb+1)), (r2d(1),r2(3*ndvb+1))      save h1l,h1u,r1,r2      data h1l,h1u /65531.0d0,32767.0d0/      data r1a /1614663166,1129329378,526800021,776978983,2108255405,139     17073720,831792859,2081030824,998880178,46863628,1925407687,1594703     2607,307275694,850067710,1175916538,1456798645,936529216,1762783151     3,471085076,1480506753,1061464328,1905157566,312592563,1837762811,9     460479143,2098259915,352902777,1448633027,1404933564,1105984119,207     59618565,665669498,2048536551,466887265,762418167,1810781119,196421     67033,736093225,1022311664,1122169906,180994817,2022163567,18864270     73,28620148,515818799,229001172,1720861301,1391402020,1373019636,47     87623031,713009217,1451207906,576147951,463161977,1610460051,110244     91551,199812544,1729155833,1566920971,2135121674,664100360,16144837     a35,1718721866,1329301939/      data r1b /1271447397,232687987,1279235311,1729360107,743509626,100     18844974,223231130,295967057,2053001188,479017831,1971230956,132785     29589,75663429,1712029246,1041477252,1966325799,1454488636,19614304     384,766673410,1322010584,1514270826,1792306888,945952775,1011786552     4,1978345837,1323181498,529233202,1400657637,768044007,762885963,30     51571619,2138630017,1129495672,947431450,1272551290,550099371,14330     683839,1729395911,918185432,760656388,5282396,367311347,160239069,1     7349055786,2107977967,652469309,1755616295,179054527,1147987993,560     8889925,95812952,1378733667,688768121,1380127404,1071140367,8449837     933,2102381231,1803690001,1132759789,1812761173,811401052,615394580     a,714455184,359573731/      data r1c /1858168607,1521204822,474536859,974736896,1114310296,801     1200246,1832712363,2063859275,849994344,731349012,1064506466,780680     2804,1680867118,1530444240,575550303,6394604,957440394,1896974923,8     348517698,296583298,1891896861,1693480484,979996076,418089926,12100     459141,335938044,1364841020,33372505,425678949,1625600626,208556353     59,237374938,2082340698,1400966182,1301717327,1946914281,1700397830     6,959550392,81736978,2142584359,1198745608,1152306633,792325244,848     7077619,841757441,773013240,1192873003,1667056045,1923639440,139011     81718,1414781121,1582603830,862850389,1441126705,203364062,84032877     9,476390896,1064504187,1897171744,1851237362,1926739714,488998756,1     a932474921,111695461/      data r1d /963757354,570544522,265037977,799660391,1346458889,11816     142383,1906989838,1618194839,347499325,1748230931,283825706,1165976     2470,27462760,1786557364,1393598092,1621652483,1329282346,144004840     34,721467605,690775934,320143906,2016181203,956443044,732611239,161     43258736,80903311,1790834073,707070495,1724865332,880405482,4571221     532,1006551685,348518543,1698123395,854765942,1845325945,891960480,     6981543163,1202170526,1648924828,276573191,1026555889,1016009069,18     785978509,211667813,2071877637,1648093826,1162635757,1288904536,688     8436696,379796093,54402138,1371679875,1053662729,1696335358,1643010     9934,426964867,455972152,643781030,1315875809,1062175994,569057285,     a545792532,187863609/      data r2a /1071956961,1978709985,512535521,2042142689,1198822369,12     103800033,983333857,1611165665,2013553633,1116755937,2141998049,186     28054497,1368667105,1717577697,1841044449,665325537,1411646433,8587     381665,80473057,150462433,2142491617,687851489,1155251169,323465185     4,1413719009,1204787169,770411489,1184333793,1372812257,262105057,1     5073437665,585584609,2019771361,7288801,2064329697,674701281,120711     62673,440338401,1595603937,1451683809,1082319841,1561253857,1814744     7033,769048545,1645392865,1222551521,574266337,774279137,748848097,     81571715041,21654497,1467375585,540169185,461260769,156908513,70085     94241,1019356129,38672353,980028385,622198753,38925281,303949793,34     a3530465,1231409121/      data r2b /1893843937,1257093089,394898401,381001697,141661153,7506     118593,1134132193,218460129,1224827873,932009953,413748193,74378441     27,848376801,1801267169,381230049,1956974561,1159791585,1210906593,     31036577761,1710546913,11588577,1308411873,232307681,4501473,169873     45073,2093783009,115903457,1133805537,1926263777,1419536353,6873650     589,803491809,694174689,1433155553,1946692577,1161043937,149951457,     62134640609,1746402273,58978273,293594081,1376507873,86494177,17922     762113,1125102561,1306240993,1261935585,2065928161,496993249,192383     89969,977759201,879976417,556749793,1081821153,1381448673,381890529     9,1304372193,927668193,325520353,571670497,592376801,1461381089,210     a4941537,1449316321/      data r2c /568247265,535476193,277261281,867344353,1231983585,29743     17153,1284930529,973238241,436102113,747263969,832981985,1766997985     2,328086497,1884956641,1068899297,1101139937,907936737,1563031521,1     3992682465,1123147745,28169185,1928972257,1456847841,1833021409,198     43751137,835295201,1608879073,1083277281,332231649,429484001,301292     5513,1021399009,1516061665,711538657,1829055457,1647386593,12402738     689,1681459169,1897200609,813756385,1652351969,1191761889,505727969     7,667992033,604812257,1389930465,1949604833,1210093537,245138401,12     88481249,1933863905,292577249,573330401,1702381537,458505185,629268     917,1589388257,1816664033,1818495969,521142241,1145828321,471328737     a,1718868961,1667223521/      data r2d /1390134241,1961342945,159624161,1353687009,174822369,199     11739361,1435728865,1728016353,1794860001,562517985,1252215777,6427     227905,1955279841,1968646113,1756568545,245305313,656081889,1915156     3449,801303521,535748577,44749793,402048993,533904353,1514057697,12     41283553,1724291041,954371041,1032749025,885683169,1586915297,20627     503585,1239306209,190464993,2137405409,1711418337,2133729249,183112     6673,1228277729,2047998945,1568534497,863626209,1007015905,92496176     71,1691205601,84521953,1473619937,489790433,354258913,2140767201,48     80606177,742484961,1852661729,589911009,175458273,1683045345,189144     96753,1874404321,558176225,1163987937,470613985,1699279841,16287600     a33,1332796385,1885130721/      ks = kstrt - 2      ndvp = (ndv - 1)/nvp + 1      ndp = min0(ndvp,nvrp)      mdp = nvp/min0(nvp,ndv)      do 20 k = 1, nblok      id = (k + ks)/mdp      do 10 j = 1, ndp      l = ndp*id + j      isc = 65536      asc = dble(isc)      bsc = asc*asc      i1 = r1(l) - (r1(l)/isc)*isc      r3 = h1l*dble(r1(l)) + asc*h1u*dble(i1)      i1 = r3/bsc      r3 = r3 - dble(i1)*bsc      bsc = 0.5d0*bsc      i1 = r2(l)/isc      isc = r2(l) - i1*isc      r0 = h1l*dble(r2(l)) + asc*h1u*dble(isc)      asc = 1.0d0/bsc      isc = r0*asc      r2(l) = r0 - dble(isc)*bsc      r3 = r3 + (dble(isc) + 2.0d0*h1u*dble(i1))      isc = r3*asc      r1(l) = r3 - dble(isc)*bsc      vran(j,k) = (dble(r1(l)) + dble(r2(l))*asc)*asc   10 continue   20 continue      return      end