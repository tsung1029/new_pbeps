There are 5 main programs here in increasingcomplexity and a make file for each of them.The simplest code has one library called lesopenpic2lib.fand a main program called lesopenpic2f77.f.  You canmake it on an ibm machine using LAM mpi by executing    make -f LAM.make lesopenpic2f77.outThis main code is in Fortran77 and is the longest sinceit exposes the most amount of detail.  The make file canbe easily modified for other compilers.The next one up in complexity has a Fortran90 wrappercalled lesopenpic2mod.f and a main program calledlesopenpic2.f.  You can make it by executing   make -f LAM.make lesopenpic2.outThe main code is shorter because some of the argumentsto the subroutines have been hidden inside the wrappers.The next one up in complexity after this has a library calledlesopenpic2_facade.f, which organizes the Fortran90 wrapperfunctions into higher level subroutines and has a mainprogram called lesopenpic2main.f.  You can make it byexecuting   make -f LAM.make lesopenpic2main.outThe main code is the shortest of all because many of thesubroutines have been encapsulated inside the library.All three of these programs assume linear interpolation.There are two other versions which allow for either linearor quadratic interpolation.The simplest of these has one library called esopenpic2lib.fa Fortran90 wrapper called esopenpic2mod.f and a main programcalled esopenpic2.f.  You can make it by executing    make -f LAM.make esopenpic2.outSimilarly there is a higher level library calledesopenpic2_facade.f, and has a main program calledesopenpic2main.f.  You can make it by executing   make -f LAM.make esopenpic2main.outYou can make all of these at once by executing   make -f LAM.make allThese are bare bones codes.  For example, the input variablesare hardwired into the code.  Normally, they would be set ina namelist.viktor